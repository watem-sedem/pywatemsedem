------------
User Choices
------------

pyws
====

 - Options: holding general options coupled to the general data processing
   and model run.
 - Erosion control measure options (ECM options): holding options related to
   erosion control measures.
 - Variables: holding values for model variables and parameters.
 - Output: holding options for the WaTEM/SEDEM model output.

Standard values for the first four sets are given in the last section of
this page, listed per model resolution.

.. note::

    It is important to note that a number of the pyws options hold
    functionalities that are inherited from the WaTEM/SEDEM model (see
    :ref:`model parameters in WaTEM/SEDEM documentation page <cnws:modelinput>`).
    As such many of these options hold the same key, but another
    functionality. If the functionality of the option is different for the
    WaTEM/SEDEM model, then this is indicated in the text (indicated with
    *For functionality in WaTEM/SEDEM, see ..*). If the functionality is the
    same, then a link to the documentation of WaTEM/SEDEM is presented (indicated
    with *see ..*).

Options
-------

UserProvidedKTC
^^^^^^^^^^^^^^^
This option indicates whether a User provided kTC value is used, and whether
WaTEM/SEDEM needs to generate a kTC value by itself. Typically, this option is set to
`1` when a **WaTEM/SEDEM simulation for scenario analysis** is done - in this case, a
kTC map will be generated by the pyws engine - and is set to `0` when a
**WaTEM/SEDEM calibration** is done - in this case, kTC maps are generated  by the
WaTEM/SEDEM engine.

Include sewers
^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:inlcudesewers>`

UseTillage
^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:calctileros>`

CreateKtc
^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:createktc>`

Create ktil map
^^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:createktil>`

Estimate clay content
^^^^^^^^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:estimclay>`

Manual outlet selection
^^^^^^^^^^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:manualoutlet>`

Calibrate
^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:calibrate>`

Convert output
^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:convertoutput>`

L model
^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:lmodel>`

S model
^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:smodel>`

Adjusted Slope
^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:adjustslope>`

Buffer reduce area
^^^^^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:bufferreduce>`

Force Routing
^^^^^^^^^^^^^
This options allows to use  user-defined routing. This functions is useful
for situations where it is known from expert knowledge that the general
flow pattern is incorrect.

For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:forcerouting>`

FilterDTM
^^^^^^^^^
Filter the digital elevation model with a 3x3 average filter which takes into
account the parcel boundaries (i.e. only averaging within parcel boundaries).

River Routing
^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:riverrouting>`

BankGrassStrips
^^^^^^^^^^^^^^^
This option defines gras bank strips at the side of the river for every
river-adjancent agricultural parcel (with the land cover equal to agriculture).

Calculate Tillage Erosion
^^^^^^^^^^^^^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:includetillagedirection>`

ECM options
-----------

Include buffers (WaTEM/SEDEM)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Load and translate buffer shapefiles to WaTEM/SEDEM buffer rasters. Consider
buffers for WaTEM/SEDEM model simulation. For functionality in WaTEM/SEDEM pascal, see
:ref:`here <cnws:includebuffers>`


UseGras (pyws)
^^^^^^^^^^^^^^^^
Load and translate grass strips shapefiles to WaTEM/SEDEM grass rasters. Grass strips
are considered in WaTEM/SEDEM via the WaTEM/SEDEM parcel raster (see
:ref:`here <cnws:prcmap>`).


Include dams (WaTEM/SEDEM)
^^^^^^^^^^^^^^^^^^^^^^^^^^
Load and translate buffer shapefiles to WaTEM/SEDEM grass rasters. Consider grass
for WaTEM/SEDEM model simulation. For functionality in WaTEM/SEDEM pascal, see
:ref:`here <cnws:includedams>`

Include ditches (WaTEM/SEDEM)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:includeditches>`

UseTeelttechn (pyws)
^^^^^^^^^^^^^^^^^^^^^^
Make use of crop-technical measures. These are defined at the level of parcel
polygons, and reduce the C-factor.

Variables
---------

Bulk density
^^^^^^^^^^^^
See :ref:`here <cnws:bulkdensity>`:

ktc low
^^^^^^^
See :ref:`here <cnws:ktclow>`

ktc high
^^^^^^^^
See :ref:`here <cnws:ktchigh>`

ktc limit
^^^^^^^^^
See :ref:`here <cnws:ktclimit>`

ktil default
^^^^^^^^^^^^
See :ref:`here <cnws:ktildefault>`

ktil threshold
^^^^^^^^^^^^^^
See :ref:`here <cnws:ktilthres>`

Parcel connectivity cropland
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parcelconncrop>`

Parcel connectivity forest
^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parcelconnforest>`

Parcel trapping efficiency cropland
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parceltrapppingcrop>`

Parcel trapping efficiency forest
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parceltrappingforest>`

Parcel trapping efficiency pasture
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parceltrappingpasture>`

Clay content parent material
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:claycontent>`

R factor
^^^^^^^^
See :ref:`here <cnws:rfactor_var>`

Alpha
^^^^^
See :ref:`here <cnws:alpha>`

Beta
^^^^
See :ref:`here <cnws:beta>`

Stream velocity
^^^^^^^^^^^^^^^
See :ref:`here <cnws:streamvelocity>`

Final timestep output
^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:timestep>`

begin_jaar
^^^^^^^^^^
(begin) Year of simulation (in development).

begin_maand
^^^^^^^^^^^
(begin) Month of simulation (in development).

Max kernel
^^^^^^^^^^
See :ref:`here <cnws:maxkernel>`

Max kernel river
^^^^^^^^^^^^^^^^
See :ref:`here <cnws:maxkernelriver>`

SewerInletEff
^^^^^^^^^^^^^
Used to define efficiency inlet, mapped to raster. For functionality of
sewer raster in WaTEM/SEDEM pascal, see :ref:`here <cnws:inlcudesewers>`

Sewer exit
^^^^^^^^^^
Only CN. For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:sewerexit>`

LS correction
^^^^^^^^^^^^^
For functionality in WaTEM/SEDEM pascal, see :ref:`here <cnws:lscorrection>`

Output
------

The output options below are all inherited by cnws. This implies that the
keys and functionalities of these options in pyws and cnws are exactly the
same. For an explanation of these functionalities, we refer to the
`WaTEM/SEDEM documentation page <https://docs.fluves.net/cnws-pascal>`_

Write aspect
^^^^^^^^^^^^
See :ref:`here <cnws:writeaspect>`

Write LS factor
^^^^^^^^^^^^^^^
See :ref:`here <cnws:writels>`

Write RUSLE
^^^^^^^^^^^
See :ref:`here <cnws:writerusle>`

Write sediment export
^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writesedexport>`

Write slope
^^^^^^^^^^^
See :ref:`here <cnws:writeslope>`

Write total runoff
^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writetotalrunoff>`

Write upstream area
^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writeuparea>`

Write water erosion
^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writerwatereros>`

Output per river segment
^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:outputsegment>`

Write rainfall excess
^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writerainfallexcess>`

Write routing table
^^^^^^^^^^^^^^^^^^^
see :ref:`here <cnws:writerouting>`

Maximize grass strips (maximize_grass_strips)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The option (boolean) enable the maximisation of for grass strips in the WaTEM/SEDEM
parcels raster. In essence, with this option, the
:func:`pyws.core.grasstrips.expand_grass_strips_with_triggers`-function is
used. This function aims to *expand* or *maximize* grass strips within the
boundaries of a parcel, so to avoid that grass strips are removed by
overlap with river and infrastructure pixels (note that river and
infrastructure pixels have a higher priority in the hierarchy of the WaTEM/SEDEM
perceelskaart). This algorithm loops with a 3x3-window over a grass strip
raster, and checks if any of the pixels in the 3x3-window are located next
to a *trigger* pixel. If this is the case, the considered pixel in the window
is also considered to be a grass pixel. Note that in essence this algorithm is
used as a solution to a resolution issue: because of the higher priority of
infrastructure and rivers in pyws, grass strips 'disappear' at a resolution
of 20 m.
