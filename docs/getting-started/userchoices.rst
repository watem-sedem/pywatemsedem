------------
User Choices
------------

pyws
======

 - Options: holding general options coupled to the general data processing
   and model run.
 - Erosion control measure options (ECM options): holding options related to
   erosion control measures.
 - Variables: holding values for model variables and parameters.
 - Output: holding options for the CN-WS model output.

Standard values for the first four sets are given in the last section of
this page, listed per model resolution.

.. note::

    It is important to note that a number of the pyws options hold
    functionalities that are inherited from the CN-WS model (see
    :ref:`model parameters in CN-WS documentation page <cnws:modelinput>`).
    As such many of these options hold the same key, but another
    functionality. If the functionality of the option is different for the
    CN-WS model, then this is indicated in the text (indicated with
    *For functionality in CN-WS pascal, see ..*). If the functionality is the
    same, then a link to the documentation of CN-WS is presented (indicated
    with *see ..*).

Options
-------

UserProvidedKTC
^^^^^^^^^^^^^^^
This option indicates whether a User provided kTC value is used, and whether
CN-WS needs to generate a kTC value by itself. Typically, this option is set to
`1` when a **CN-WS simulation for scenario analysis** is done - in this case, a
kTC map will be generated by the pyws engine - and is set to `0` when a
**CN-WS calibration** is done - in this case, kTC maps are generated  by the
CN-WS engine.

Include sewers
^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:inlcudesewers>`

UseTillage
^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:calctileros>`

CreateKtc
^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:createktc>`

Create ktil map
^^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:createktil>`

Estimate clay content
^^^^^^^^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:estimclay>`

Manual outlet selection
^^^^^^^^^^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:manualoutlet>`

Calibrate
^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:calibrate>`

Convert output
^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:convertoutput>`

L model
^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:lmodel>`

S model
^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:smodel>`

Adjusted Slope
^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:adjustslope>`

Buffer reduce area
^^^^^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:bufferreduce>`

Force Routing
^^^^^^^^^^^^^
This options allows to use  user-defined routing. This functions is useful
for situations where it is known from expert knowledge that the general
flow pattern is incorrect.

For functionality in CN-WS pascal, see :ref:`here <cnws:forcerouting>`

FilterDTM
^^^^^^^^^
Filter the digital elevation model with a 3x3 average filter which takes into
account the parcel boundaries (i.e. only averaging within parcel boundaries).

River Routing
^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:riverrouting>`

BankGrassStrips
^^^^^^^^^^^^^^^
This option defines gras bank strips at the side of the river for every
river-adjancent agricultural parcel (with the land cover equal to agriculture).

Calculate Tillage Erosion
^^^^^^^^^^^^^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:includetillagedirection>`

ECM options
-----------

Include buffers (CN-WS)
^^^^^^^^^^^^^^^^^^^^^^^
Load and translate buffer shapefiles to CN-WS buffer rasters. Consider
buffers for CN-WS model simulation. For functionality in CN-WS pascal, see
:ref:`here <cnws:includebuffers>`


UseGras (pyws)
^^^^^^^^^^^^^^^^
Load and translate grass strips shapefiles to CN-WS grass rasters. Grass strips
are considered in CN-WS via the CN-WS parcel raster (see
:ref:`here <cnws:prcmap>`).


Include dams (CN-WS)
^^^^^^^^^^^^^^^^^^^^
Load and translate buffer shapefiles to CN-WS grass rasters. Consider grass
for CN-WS model simulation. For functionality in CN-WS pascal, see
:ref:`here <cnws:includedams>`

Include ditches (CN-WS)
^^^^^^^^^^^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:includeditches>`

UseTeelttechn (pyws)
^^^^^^^^^^^^^^^^^^^^^^
Make use of crop-technical measures. These are defined at the level of parcel
polygons, and reduce the C-factor.

Variables
---------

Bulk density
^^^^^^^^^^^^
See :ref:`here <cnws:bulkdensity>`:

ktc low
^^^^^^^
See :ref:`here <cnws:ktclow>`

ktc high
^^^^^^^^
See :ref:`here <cnws:ktchigh>`

ktc limit
^^^^^^^^^
See :ref:`here <cnws:ktclimit>`

ktil default
^^^^^^^^^^^^
See :ref:`here <cnws:ktildefault>`

ktil threshold
^^^^^^^^^^^^^^
See :ref:`here <cnws:ktilthres>`

Parcel connectivity cropland
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parcelconncrop>`

Parcel connectivity forest
^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parcelconnforest>`

Parcel trapping efficiency cropland
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parceltrapppingcrop>`

Parcel trapping efficiency forest
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parceltrappingforest>`

Parcel trapping efficiency pasture
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:parceltrappingpasture>`

Clay content parent material
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:claycontent>`

R factor
^^^^^^^^
See :ref:`here <cnws:rfactor_var>`

Alpha
^^^^^
See :ref:`here <cnws:alpha>`

Beta
^^^^
See :ref:`here <cnws:beta>`

Stream velocity
^^^^^^^^^^^^^^^
See :ref:`here <cnws:streamvelocity>`

Final timestep output
^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:timestep>`

begin_jaar
^^^^^^^^^^
(begin) Year of simulation (in development).

begin_maand
^^^^^^^^^^^
(begin) Month of simulation (in development).

Max kernel
^^^^^^^^^^
See :ref:`here <cnws:maxkernel>`

Max kernel river
^^^^^^^^^^^^^^^^
See :ref:`here <cnws:maxkernelriver>`

SewerInletEff
^^^^^^^^^^^^^
Used to define efficiency inlet, mapped to raster. For functionality of
sewer raster in CN-WS pascal, see :ref:`here <cnws:inlcudesewers>`

Sewer exit
^^^^^^^^^^
Only CN. For functionality in CN-WS pascal, see :ref:`here <cnws:sewerexit>`

LS correction
^^^^^^^^^^^^^
For functionality in CN-WS pascal, see :ref:`here <cnws:lscorrection>`

Output
------

The output options below are all inherited by cnws. This implies that the
keys and functionalities of these options in pyws and cnws are exactly the
same. For an explanation of these functionalities, we refer to the
`CN-WS documentation page <https://docs.fluves.net/cnws-pascal>`_

Write aspect
^^^^^^^^^^^^
See :ref:`here <cnws:writeaspect>`

Write LS factor
^^^^^^^^^^^^^^^
See :ref:`here <cnws:writels>`

Write RUSLE
^^^^^^^^^^^
See :ref:`here <cnws:writerusle>`

Write sediment export
^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writesedexport>`

Write slope
^^^^^^^^^^^
See :ref:`here <cnws:writeslope>`

Write total runoff
^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writetotalrunoff>`

Write upstream area
^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writeuparea>`

Write water erosion
^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writerwatereros>`

Output per river segment
^^^^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:outputsegment>`

Write rainfall excess
^^^^^^^^^^^^^^^^^^^^^
See :ref:`here <cnws:writerainfallexcess>`

Write routing table
^^^^^^^^^^^^^^^^^^^
see :ref:`here <cnws:writerouting>`


pyws flanders
================

 - Flanders Options: holding options specifically tailored for scenario's in
   Flanders.
 - EBM Sources: holding tags for selecting sources of erosion control
   measures in Flanders to consider in the data processing and model run.

Flanders options
----------------

The Flanders options describe functionalities specifically coupled to the
data processing and model runs of pyws for Flanders. These options are
coupled to each other in a number of conditions, except for the option
'RemoveSmallSegments'. Below a figure is presented which summarizes the
conditions between the different Flanders options. An explanation of their
functionalities is described in the subsections of this section.

.. image: ../_static/png/options_flanders_diagram.png

C-factor model (cfactormodel)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Three types of C-factor models are implemented in pyws:

- *indicator*: This model takes C-factor values computed from the indicator.
- *table*: This model takes C-factor values from an expert table.
- *non_specific*: This model removes all crop information and applies a
  C-factor of 0.37 (for parcels)

Indicator measure packages (indicator_measure_packages)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
If the C-factor model is set to *C_indicator*, then a number of additional
measure packages can be defined:

- *beheerovereenkomsten_indicator*: take into account C-values reductions in the ecm
  package *beheerovereenkomsten*.
- *randvoorwaarden_indicator*: take into account C-values reductions in the ecm
  package *randvoorwaarden*.

If this list is empty, only the default C-values are taken into account.

Maximize grass strips (maximize_grass_strips)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The option (boolean) enable the maximisation of for grass strips in the CN-WS
parcels raster. In essence, with this option, the
:func:`pyws.core.grasstrips.expand_grass_strips_with_triggers`-function is
used. This function aims to *expand* or *maximize* grass strips within the
boundaries of a parcel, so to avoid that grass strips are removed by
overlap with river and infrastructure pixels (note that river and
infrastructure pixels have a higher priority in the hierarchy of the CN-WS
perceelskaart). This algorithm loops with a 3x3-window over a grass strip
raster, and checks if any of the pixels in the 3x3-window are located next
to a *trigger* pixel. If this is the case, the considered pixel in the window
is also considered to be a grass pixel. Note that in essence this algorithm is
used as a solution to a resolution issue: because of the higher priority of
infrastructure and rivers in pyws, grass strips 'disappear' at a resolution
of 20 m.

ECM sources (or ECM package)
----------------------------

This dictionary defines the sources of erosion control measures implemented
in Flanders that can be used to include in the simulation. A number of these
sources are defined by the management program under which they are implemented.

Beheerovereenkomsten
^^^^^^^^^^^^^^^^^^^^
Include the fixed (BO vast) and variable (BO var) measures defined in the
management program 'Beheerovereenkomsten' (BOs). Variable measures are
defined as temporary measures. See `VLM beheeroverenkomsten <https://www.vlm
.be/nl/themas/beheerovereenkomsten>`_ (in Dutch).

Symptom-oriented measure.

Erosiebestrijdingswerken
^^^^^^^^^^^^^^^^^^^^^^^^
Include measures defined in the `'Erosiebestrijdingswerken' of the Flemish
Government <https://omgeving.vlaanderen.be/
subsidie-voor-kleinschalige-erosiebestrijdingswerken>`_

Symptom-oriented measure.

Erosiebestrijdingsplan
^^^^^^^^^^^^^^^^^^^^^^
Include *potential* measures defined on local level (towns). See
`Gemeentelijk Erosiebestrijdingsplan <https://omgeving.vlaanderen.be/subsidie-voor-de-opmaak-van-een-gemeentelijk-erosiebestrijdingsplan>`_

Symptom-oriented measure.

rodepercelen
^^^^^^^^^^^^
Apply non-plowing tillage (20 % of C-factor) for red parcels.

Source-oriented measure.

oranjepercelen
^^^^^^^^^^^^^^
Apply non-plowing tillage (20 % of C-factor) for orange parcels.

Source-oriented measure.

gelepercelen
^^^^^^^^^^^^
Apply non-plowing tillage (20 % of C-factor) for yellow parcels.

Source-oriented measure.


paarsepercelen
^^^^^^^^^^^^^^
Apply non-plowing tillage (20 % of C-factor) for purple parcels.

Source-oriented measure.


groenepercelen
^^^^^^^^^^^^^^
Apply non-plowing tillage (20 % of C-factor) for green parcels.

Source-oriented measure.


beheerovereenkomsten_indicator
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Source-oriented measure of beheerovereenkomsten (reported in indicator).

randvoorwaarden_indicator
^^^^^^^^^^^^^^^^^^^^^^^^^
Source-oriented measure of randvoorwaarden (reported in indicator).

Summary table
-------------
In the table below, the default values for the options described above can
be found. Note that these default values are tailored to the needs of
erosion control in Flanders.

.. tabularcolumns:: |p{1cm}|p{1cm}|p{1cm}|p{1cm}
.. csv-table::
    :file: ../../src/pyws/flanders/data/options_flanders.csv
    :class: longtable
